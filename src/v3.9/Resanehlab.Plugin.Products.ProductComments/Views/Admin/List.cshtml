@model Resanehlab.Plugin.Products.ProductComments.Models.ProductCommentListModel
@using Nop.Core.Infrastructure;

@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Plugin.ProductComments.Comments").Text;
}

@{
    Html.SetActiveMenuItemSystemName("Resanehlab.Plugin.Products.ProductComments.ManageComments");
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Plugin.ProductComments.Comments")
        </h1>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchCommentText)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchCommentText)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchProductName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchProductName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchIsApprovedId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchIsApprovedId", Model.AvailableApprovedOptions)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchVisitedId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchVisitedId", Model.AvailableVisitedOptions)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-comments" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="comments-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#comments-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("ProductCommentList", "ProductCommentsAdmin"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    columns: [
                                        {
                                            field: "CommentText",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.CommentText")",
                                            width: 300
                                        }, {
                                            field: "ReplyText",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.ReplyText")",
                                            width: 300
                                        }, {
                                            field: "IsApproved",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.IsApproved")",
                                            width: 100,
                                            template: '# if(IsApproved) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        }, {
                                            field: "Visited",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.Visited")",
                                            width: 100,
                                            template: '# if(Visited) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        },
                                        {
                                            field: "ProductName",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.ProductName")",
                                            width: 100,
                                            template: '<a href="/#=ProductSeName#" target="_blank">#=ProductName#</a>'
                                        }, {
                                            field: "CreatedOnStr",
                                            title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.CreatedOn")",
                                            width: 150,
                                        }, {
                                            field: "Id",
                                            title: "@T("Admin.Common.Edit")",
                                            width: 100,
                                            template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                                        }
                                    ]
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var selectedIds = [];

        $(document).ready(function () {
            //search button
            $('#search-comments').click(function () {
                //search
                var grid = $('#comments-grid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchCommentText)").keydown(function (event) {
                if (event.keyCode === 13) {
                    $("#search-comments").click();
                    return false;
                }
            });
            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
                if (event.keyCode === 13) {
                    $("#search-comments").click();
                    return false;
                }
            });
        });

        function additionalData() {
            var data = {
                SearchCommentText: $('#@Html.FieldIdFor(model => model.SearchCommentText)').val(),
                SearchIsApprovedId: $('#SearchIsApprovedId').val(),
                SearchVisitedId: $('#SearchVisitedId').val(),
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val()
            };
            addAntiForgeryToken(data);
            return data;
        }

    </script>
}