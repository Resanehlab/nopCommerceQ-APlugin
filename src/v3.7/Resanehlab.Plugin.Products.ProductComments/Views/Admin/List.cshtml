@model Resanehlab.Plugin.Products.ProductComments.Models.ProductCommentListModel
@using Nop.Core.Infrastructure;

@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Plugin.ProductComments.Comments").Text;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            @T("Admin.Plugin.ProductComments.Comments")
        </div>
    </div>

    <table>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCommentText)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchCommentText)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchProductName)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchProductName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchIsApprovedId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchIsApprovedId", Model.AvailableApprovedOptions)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchVisitedId)
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchVisitedId", Model.AvailableVisitedOptions)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-comments" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>

    <table class="adminContent">
        <tr>
            <td>
                <div id="comments-grid"></div>
                <script>
                    $(document).ready(function() {
                        $("#comments-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("ProductCommentList", "ProductCommentsAdmin"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                                {
                                    field: "CommentText",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.CommentText")",
                                    width: 300
                                }, {
                                    field: "ReplyText",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.ReplyText")",
                                    width: 300
                                }, {
                                    field: "IsApproved",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.IsApproved")",
                                    width: 100,
                                    attributes: { style: "text-align:center" },
                                    template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=IsApproved#.gif" />'
                                }, {
                                    field: "Visited",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.Visited")",
                                    width: 100,
                                    attributes: { style: "text-align:center" },
                                    template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=Visited#.gif" />'
                                },
                                {
                                    field: "ProductName",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.ProductName")",
                                    width: 100,
                                    template: '<a href="/#=ProductSeName#" target="_blank">#=ProductName#</a>'
                                }, {
                                    field: "CreatedOnStr",
                                    title: "@T("Admin.Plugin.ResanehlabProductComments.Fields.CreatedOn")",
                                    width: 150,
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.Common.Edit")",
                                    width: 100,
                                    template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                                }
                            ]
                        });
                    });
                </script>


                <script type="text/javascript">
                    var selectedIds = [];

                    $(document).ready(function () {
                        //search button
                        $('#search-comments').click(function () {
                            //search
                            var grid = $('#comments-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });

                        $("#@Html.FieldIdFor(model => model.SearchCommentText)").keydown(function (event) {
                            if (event.keyCode === 13) {
                                $("#search-comments").click();
                                return false;
                            }
                        });
                        $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
                            if (event.keyCode === 13) {
                                $("#search-comments").click();
                                return false;
                            }
                        });
                    });

                    function additionalData() {
                        var data = {
                            SearchCommentText: $('#@Html.FieldIdFor(model => model.SearchCommentText)').val(),
                            SearchIsApprovedId: $('#SearchIsApprovedId').val(),
                            SearchVisitedId: $('#SearchVisitedId').val(),
                            SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }

                </script>
            </td>
        </tr>
    </table>
}
